class Solution {
    public int maximumProduct(int[] nums) {
			int n=nums.length;
	
	// If size is less than 3, no triplet exists
	if (n< 3)
		return -1;

	// Initialize Maximum, second maximum
	// and third maximum element
	int maxA = Integer.MIN_VALUE,
		maxB = Integer.MIN_VALUE,
		maxC = Integer.MIN_VALUE;

	// Initialize Minimum and
	// second minimum element
	int minA = Integer.MAX_VALUE,
		minB = Integer.MAX_VALUE;

	for(int i = 0; i < n; i++)
	{
		
		// Update Maximum, second maximum
		// and third maximum element
		if (nums[i] > maxA)
		{
			maxC = maxB;
			maxB = maxA;
			maxA = nums[i];
		}

		// Update second maximum and
		// third maximum element
		else if (nums[i] > maxB)
		{
			maxC = maxB;
			maxB = nums[i];
		}

		// Update third maximum element
		else if (nums[i] > maxC)
			maxC = nums[i];

		// Update Minimum and second
		// minimum element
		if (nums[i] < minA)
		{
			minB = minA;
			minA = nums[i];
		}

		// Update second minimum element
		else if(nums[i] < minB)
			minB = nums[i];
	}

	return Math.max(minA * minB * maxA,
					maxA * maxB * maxC);
}
}